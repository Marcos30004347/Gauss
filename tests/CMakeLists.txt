cmake_minimum_required(VERSION 3.10)

include(CTest)

project(IntegerTests)
add_executable(IntegerTests Core/AST/Integer.cpp)
target_link_libraries(IntegerTests math)
target_include_directories(IntegerTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME IntegerTests COMMAND IntegerTests)

project(IntTests)
add_executable(IntTests Core/AST/Int.cpp)
target_link_libraries(IntTests math)
target_include_directories(IntTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME IntTests COMMAND IntTests)

#project(RealTests)
#add_executable(RealTests Core/AST/Real.cpp)
#target_link_libraries(RealTests math)
#add_test(NAME RealTests COMMAND RealTests)

project(ASTTests)
add_executable(ASTTests Core/AST/AST.cpp)
target_link_libraries(ASTTests math)
target_include_directories(ASTTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME ASTTests COMMAND ASTTests)

project(AlgebraTests)
add_executable(AlgebraTests Core/Algebra/Algebra.cpp)
target_link_libraries(AlgebraTests math)
target_include_directories(AlgebraTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME AlgebraTests COMMAND AlgebraTests)

project(ListTests)
add_executable(ListTests Core/Algebra/List.cpp)
target_link_libraries(ListTests math)
target_include_directories(ListTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME ListTests COMMAND ListTests)

project(SetTests)
add_executable(SetTests Core/Algebra/Set.cpp)
target_link_libraries(SetTests math)
target_include_directories(SetTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME SetTests COMMAND SetTests)

project(RationalTests)
add_executable(RationalTests Core/Rational/Rational.cpp)
target_link_libraries(RationalTests math)
target_include_directories(RationalTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME RationalTests COMMAND RationalTests)

project(SimplificationRationals)
add_executable(SimplificationRationals Core/Simplification/Rationals.cpp)
target_link_libraries(SimplificationRationals math)
target_include_directories(SimplificationRationals PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME SimplificationRationals COMMAND SimplificationRationals)

project(SimplificationPowers)
add_executable(SimplificationPowers Core/Simplification/Power.cpp)
target_link_libraries(SimplificationPowers math)
target_include_directories(SimplificationPowers PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME SimplificationPowers COMMAND SimplificationPowers)

project(SimplificationAdditions)
add_executable(SimplificationAdditions Core/Simplification/Addition.cpp)
target_link_libraries(SimplificationAdditions math)
target_include_directories(SimplificationAdditions PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME SimplificationAdditions COMMAND SimplificationAdditions)

project(SimplificationMultiplications)
add_executable(SimplificationMultiplications Core/Simplification/Multiplication.cpp)
target_link_libraries(SimplificationMultiplications math)
target_include_directories(SimplificationMultiplications PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME SimplificationMultiplications COMMAND SimplificationMultiplications)

project(SimplificationDivisions)
add_executable(SimplificationDivisions Core/Simplification/Division.cpp)
target_link_libraries(SimplificationDivisions math)
target_include_directories(SimplificationDivisions PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME SimplificationDivisions COMMAND SimplificationDivisions)

project(SimplificationSubtractions)
add_executable(SimplificationSubtractions Core/Simplification/Subtraction.cpp)
target_link_libraries(SimplificationSubtractions math)
target_include_directories(SimplificationSubtractions PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME SimplificationSubtractions COMMAND SimplificationSubtractions)

project(PolynomialTests)
add_executable(PolynomialTests Core/Polynomial/Polynomial.cpp)
target_link_libraries(PolynomialTests math)
target_include_directories(PolynomialTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME PolynomialTests COMMAND PolynomialTests)

project(ResultantTests)
add_executable(ResultantTests Core/Polynomial/Resultant.cpp)
target_link_libraries(ResultantTests math)
target_include_directories(ResultantTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME ResultantTests COMMAND ResultantTests)

project(ExpandTests)
add_executable(ExpandTests Core/Expand/Expand.cpp)
target_link_libraries(ExpandTests math)
target_include_directories(ExpandTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME ExpandTests COMMAND ExpandTests)

project(GaloisFieldTests)
add_executable(GaloisFieldTests Core/GaloisField/GaloisField.cpp)
target_link_libraries(GaloisFieldTests math)
target_include_directories(GaloisFieldTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME GaloisFieldTests COMMAND GaloisFieldTests)

#project(TrigonometryTests)
#add_executable(TrigonometryTests Core/Trigonometry/Trigonometry.cpp)
#target_link_libraries(TrigonometryTests math)
#add_test(NAME TrigonometryTests COMMAND TrigonometryTests)

#project(ExponentialTests)
#add_executable(ExponentialTests Core/Exponential/Exponential.cpp)
#target_link_libraries(ExponentialTests math)
#add_test(NAME ExponentialTests COMMAND ExponentialTests)

#project(CalculusTests)
#add_executable(CalculusTests Core/Calculus/Calculus.cpp)
#target_link_libraries(CalculusTests math)
#add_test(NAME CalculusTests COMMAND CalculusTests)

#project(FactorizationSquareFreeTests)
#add_executable(FactorizationSquareFreeTests Core/Factorization/SquareFree.cpp)
#target_link_libraries(FactorizationSquareFreeTests math)
#add_test(NAME FactorizationSquareFreeTests COMMAND FactorizationSquareFreeTests)

#project(FactorizationHenselTests)
#add_executable(FactorizationHenselTests Core/Factorization/Hensel.cpp)
#target_link_libraries(FactorizationHenselTests math)
#add_test(NAME FactorizationHenselTests COMMAND FactorizationHenselTests)

project(FactorizationBerlekampTests)
add_executable(FactorizationBerlekampTests Core/Factorization/Berlekamp.cpp)
target_link_libraries(FactorizationBerlekampTests math)
target_include_directories(FactorizationBerlekampTests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
add_test(NAME FactorizationBerlekampTests COMMAND FactorizationBerlekampTests)

#project(FactorizationUtilsTests)
#add_executable(FactorizationUtilsTests Core/Factorization/Utils.cpp)
#target_link_libraries(FactorizationUtilsTests math)
#add_test(NAME FactorizationUtilsTests COMMAND FactorizationUtilsTests)

#project(FactorizationWangTests)
#add_executable(FactorizationWangTests Core/Factorization/Wang.cpp)
#target_link_libraries(FactorizationWangTests math)
#add_test(NAME FactorizationWangTests COMMAND FactorizationWangTests)

#project(FactorizationZassenhausTests)
#add_executable(FactorizationZassenhausTests Core/Factorization/Zassenhaus.cpp)
#target_link_libraries(FactorizationZassenhausTests math)
#add_test(NAME FactorizationZassenhausTests COMMAND FactorizationZassenhausTests)
